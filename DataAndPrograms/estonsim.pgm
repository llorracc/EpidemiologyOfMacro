end clear memorydedit(new) AgentSimResults.ratopen data Com_2525.txtstore(convert=prn,org=obs)open data Com_0050.txtstore(convert=prn,org=obs)open data Com_2030.txtstore(convert=prn,org=obs)open data Com_1535.txtstore(convert=prn,org=obs)open data Com_0025.txtstore(convert=prn,org=obs)open data Com_2525_Err0p5.txtstore(convert=prn,org=obs)saveclose dataend clear memorycal 1960 1 4allocate 2001:4compute maketable = 1catalogopen data AgentSimResults.ratdata(format=rats)smpl 1981:3 *linreg Mean_Com_2525# signal_Com_2525 Mean_Com_2525{1}compute beta1 = %beta(1)compute beta2 = %beta(2)compute durbin = %durbincompute seesq  = %seesqcompute tstats1 = %tstats(1)compute tstats2 = %tstats(2)compute stderrs1 = %stderrs(1)compute stderrs2 = %stderrs(2)compute rbarsq   = %rbarsqrestrict(create) 1# 1 2# 1 1 1* Test whether the restriction \lambda + (1-\lambda) to equal 1 can be rejected* Syntax: first card lists coefficients used in restriction*         second card indicates multiple of corresponding coefficient, followed by sum* It can't reject the restrictioncompute siga1pa2eq1 = %SIGNIFif maketable == 1  source(noecho) estonsim_start.pgm  source(noecho) estonsim_lam25.pgm  change output screenend ifsmpl 1981:3 *linreg Mean_Com_0050# signal_Com_0050 Mean_Com_0050{1}compute beta1 = %beta(1)compute beta2 = %beta(2)compute durbin = %durbincompute seesq  = %seesqcompute tstats1 = %tstats(1)compute tstats2 = %tstats(2)compute stderrs1 = %stderrs(1)compute stderrs2 = %stderrs(2)compute rbarsq   = %rbarsqrestrict(create) 1# 1 2# 1 1 1* Test whether the restriction \lambda + (1-\lambda) to equal 1 can be rejected* Syntax: first card lists coefficients used in restriction*         second card indicates multiple of corresponding coefficient, followed by sum* It can't reject the restrictioncompute siga1pa2eq1 = %SIGNIFif maketable == 1  change output fileio  source(noecho) estonsim_lam0050.pgm  change output screenend ifsmpl 1981:3 *linreg Mean_Com_2030# signal_Com_2030 mean_Com_2030{1}compute beta1 = %beta(1)compute beta2 = %beta(2)compute durbin = %durbincompute seesq  = %seesqcompute tstats1 = %tstats(1)compute tstats2 = %tstats(2)compute stderrs1 = %stderrs(1)compute stderrs2 = %stderrs(2)compute rbarsq   = %rbarsqrestrict(create) 1# 1 2# 1 1 1* Test whether the restriction \lambda + (1-\lambda) to equal 1 can be rejected* Syntax: first card lists coefficients used in restriction*         second card indicates multiple of corresponding coefficient, followed by sum* It can't reject the restrictioncompute siga1pa2eq1 = %SIGNIFif maketable == 1  change output fileio  source(noecho) estonsim_lam2030.pgm  change output screenend ifsmpl 1981:3 *linreg Mean_Com_1535# signal_Com_1535 mean_Com_1535{1}compute beta1 = %beta(1)compute beta2 = %beta(2)compute durbin = %durbincompute seesq  = %seesqcompute tstats1 = %tstats(1)compute tstats2 = %tstats(2)compute stderrs1 = %stderrs(1)compute stderrs2 = %stderrs(2)compute rbarsq   = %rbarsqrestrict(create) 1# 1 2# 1 1 1* Test whether the restriction \lambda + (1-\lambda) to equal 1 can be rejected* Syntax: first card lists coefficients used in restriction*         second card indicates multiple of corresponding coefficient, followed by sum* It can't reject the restrictioncompute siga1pa2eq1 = %SIGNIFif maketable == 1  change output fileio  source(noecho) estonsim_lam1535.pgm  source(noecho) estonsim_end.pgm  change output screenend ifsmpl 1978:1 1995:4open data infl_cross_section.ratdata(format=rats)set stddev = variance**0.5declare vector[string] lablnames(3)compute lablnames(1) = "Lambda = 0.25"compute lablnames(2) = "Lambda in (0.0,0.5)"compute lablnames(3) = "Michigan Data"smpl 1978:1 1995:4graph(overlay=line,header="Standard Deviation of Inflation Expectations",klabel=lablnames,$key=upright,vlabel="Simulations",ovlabel="Michigan Data",patterns) 3# sdev_Com_2525 / 2# sdev_Com_0050 / 3# stddev / 1declare vector[string] lablnames2(2)compute lablnames2(1) = "Michigan Data"compute lablnames2(2) = "Lambda = 0.25, Multiplicative Error"graph(vlabel="Cross-Household Standard Deviation",klabel=lablnames2,maximum=11,minimum=0,$key=upright) 2# stddev / 1# sdev_Com_2525_err0p5 / 2