end clear memorycal 1959 1 4allocate 2001:4open data complex_q.ratdata(for=rat)compute maketable = 1compute NeweyWestLags = fix(4.0*((160.0/100.0)**(2./9.)))smpl 1981:3 2000:2linreg(robusterrors,damp=1,lags=NeweyWestLags) adlcpimica# constanttest 1# 1# 0source(noecho) stars.srcif maketable == 1  source(noecho) esteqn_start.pgm  source(noecho) esteqn_memo.pgm  change output screenend iflinreg adlcpimica / adlcpimica_e# adlcpispfa adlcpimica{1}* So 'rational' forecast gets 1/4, own lagged gets 3/4compute beta1 = %beta(1)compute beta2 = %beta(2)compute durbin = %durbincompute seesq  = %seesqcompute tstats1 = %tstats(1)compute tstats2 = %tstats(2)compute stderrs1 = %stderrs(1)compute stderrs2 = %stderrs(2)compute rbarsq   = %rbarsqrestrict(create) 1# 1 2# 1 1 1* Test whether the restriction \lambda + (1-\lambda) to equal 1 can be rejected* Syntax: first card lists coefficients used in restriction*         second card indicates multiple of corresponding coefficient, followed by sum* It can't reject the restrictioncorrelate(qstats) adlcpimica_e* No evidence of serial correlation in residualscompute siga1pa2eq1 = %SIGNIFtest 1# 1# 0.25if maketable == 1  change output fileio  source(noecho) esteqn_base_unrestr.pgm  source(noecho) esteqn_base_restr.pgm  change output screenend if * What if we allow a constant?linreg adlcpimica / adlcpimica_e# constant adlcpispfa adlcpimica{1}* Unfortunately, constant is statistically significant* SEE declines from about 0.42 to about 0.36test 1# 1# 0if maketable == 1  change output fileio  source(noecho) esteqn_withconst.pgm  change output screenend if correlate(qstats) adlcpimica_e* Still no evidence of serial correlation* What if we allow lagged inflation to enter?* Linearly:linreg adlcpimica / adlcpimica_e# adlcpispfa adlcpimica{1} adlcpi{1} compute beta1 = %beta(1)compute beta2 = %beta(2)compute beta3 = %beta(3)compute durbin = %durbincompute seesq  = %seesqcompute tstats1 = %tstats(1)compute tstats2 = %tstats(2)compute tstats3 = %tstats(2)compute stderrs1 = %stderrs(1)compute stderrs2 = %stderrs(2)compute stderrs3 = %stderrs(3)compute rbarsq   = %rbarsq* See if we can require lambda1 + lambda2 + (1-lambda1+lambda2)  = 1restrict(create) 1# 1 2 3# 1 1 1 1* It's happy with the restrictioncorrelate(qstats) adlcpimica_e* And again there's no evidence of serial correlation in the residualsif maketable == 1  change output fileio  source(noecho) esteqn_withinfl.pgm  change output screenend if * Unfortunately, however, lagged inflation was statistically significant* But it wants to be in there with a NEGATIVE coeff, but only because there's no constant term:linreg adlcpimica / adlcpimica_e# constant adlcpispfa adlcpimica{1} adlcpi{1} correlate(qstats) adlcpimica_etest 1# 4# 0if maketable == 1  change output fileio  source(noecho) esteqn_withinflandconst.pgm  change output screenend if * What if we assume that the source of infection is lagged actual inflation rather than SPF?linreg adlcpimica / adlcpimica_e# adlcpimica{1} adlcpi{1} compute beta1 = %beta(1)compute beta2 = %beta(2)compute durbin = %durbincompute seesq  = %seesqcompute tstats1 = %tstats(1)compute tstats2 = %tstats(2)compute stderrs1 = %stderrs(1)compute stderrs2 = %stderrs(2)compute rbarsq   = %rbarsqrestrict(create) 1# 1 2# 1 1 1correlate(qstats) adlcpimica_e* No evidence of serial correlation in residualscompute siga2pa3eq1 = %SIGNIFif maketable == 1  change output fileio  source(noecho) esteqn_infl_unrestr.pgm  source(noecho) esteqn_end.pgm  change output screenend if 